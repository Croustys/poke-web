{"version":3,"sources":["api/index.ts","TSStyled/index.ts","components/PokeCard.tsx","App.tsx","index.tsx"],"names":["URL","fetchPokemon","name","a","axios","get","resp","data","DivApp","styled","Form","Input","Label","DivTableRow","Container","Img","DivTable","DivTableCell","DivTableBody","PokeCard","sprites","height","weight","game_indices","types","src","type","Math","round","length","App","useState","search","setSearch","pokemon","setPokemon","e","key","preventDefault","console","log","onChange","target","value","onKeyPress","handleEnter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAGMA,EAAG,qCAWF,SAAeC,EAAtB,kC,4CAAO,WAA4BC,GAA5B,eAAAC,EAAA,sEACcC,IAAMC,IAAN,UAAaL,GAAb,OAAmBE,IADjC,cACCI,EADD,gBAEQA,EAAKC,KAFb,oF,kECZMC,EAASC,YAAO,MAAPA,CAAH,qHAKNC,EAAOD,YAAO,OAAPA,CAAH,sJAQJE,EAAQF,YAAO,QAAPA,CAAH,sJAQLG,EAAQH,YAAO,QAAPA,CAAH,gEAILI,EAAcJ,YAAO,MAAPA,CAAH,mDAGXK,EAAYL,YAAO,MAAPA,CAAH,4HAMTM,EAAMN,YAAO,MAAPA,CAAH,6CAGHO,EAAWP,YAAO,MAAPA,CAAH,8HAgBRQ,GATkBR,YAAO,MAAPA,CAAH,uFAIAA,YAAO,MAAPA,CAAH,wGAKGA,YAAO,MAAPA,CAAH,yGAUZS,GALeT,YAAO,MAAPA,CAAH,6GAKGA,YAAO,MAAPA,CAAH,0D,OC9BVU,EAhCE,SAAC,GAA8D,IAA7DC,EAA4D,EAA5DA,QAASC,EAAmD,EAAnDA,OAAQC,EAA2C,EAA3CA,OAAQC,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,MACxD,OACI,eAACV,EAAD,WACE,cAACC,EAAD,CAAKU,IAAKL,EAAO,gBACf,cAACJ,EAAD,UACE,eAACE,EAAD,WACE,eAACL,EAAD,WACE,cAACI,EAAD,mBACA,cAACA,EAAD,UAAeO,EAAM,GAAGE,KAAKxB,UAE/B,eAACW,EAAD,WACE,cAACI,EAAD,qBACA,eAACA,EAAD,WACGU,KAAKC,MAAe,IAATP,GADd,UAIF,eAACR,EAAD,WACE,cAACI,EAAD,qBACA,eAACA,EAAD,WACGU,KAAKC,MAAMN,EAAS,KADvB,aAIF,eAACT,EAAD,WACE,cAACI,EAAD,gCACA,cAACA,EAAD,UAAeM,EAAaM,qBCK7BC,MAxBf,WACE,MAA4BC,qBAA5B,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA8BF,mBAA0B,MAAxD,mBAAOG,EAAP,KAAgBC,EAAhB,KAFa,4CAIb,WAA2BC,GAA3B,eAAAjC,EAAA,yDACe,UAAViC,EAAEC,IADP,uBAEID,EAAEE,iBAFN,SAGuBrC,EAAa+B,GAHpC,OAGUzB,EAHV,OAIIgC,QAAQC,IAAIjC,GACZ4B,EAAW5B,GALf,4CAJa,sBAYb,OACE,cAACC,EAAD,UACE,gCACE,eAACE,EAAD,WACE,cAACE,EAAD,qCACA,cAACD,EAAD,CAAOe,KAAK,OAAOe,SAAU,SAAAL,GAAC,OAAIH,EAAUG,EAAEM,OAAOC,QAAQC,WAAY,SAACR,GAAD,OAjBpE,2CAiB2ES,CAAYT,SAE7FF,GAAW,cAAC,EAAD,eAAcA,UCtBlCY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2e5284d0.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { IPokemon } from \"../interfaces/interfaces\";\n\nconst URL = `https://pokeapi.co/api/v2/pokemon/`;\nexport async function fetchDefault(): Promise<void> {\n  const resp = await axios.get(URL);\n  const data = await resp.data;\n  const pokeDatas = [];\n  for (const poke of data.results) {\n    const r = await axios.get(poke.url);\n    console.log(r.data);\n    pokeDatas.push(r.data as IPokemon);\n  }\n}\nexport async function fetchPokemon(name: string): Promise<IPokemon> {\n  const resp = await axios.get(`${URL}${name}`);\n  return await resp.data;\n}\n","import { styled } from \"tsstyled\";\r\n\r\nexport const DivApp = styled('div')`\r\n  background-image: url(\"pokebackground.png\");\r\n  text-align: center;\r\n  height: 100vh;\r\n`\r\nexport const Form = styled('form')`\r\n  display: flex;\r\n  text-align: center;\r\n  width: 50%;\r\n  margin: auto;\r\n  padding-top: 10vh;\r\n  flex-direction: column;\r\n`;\r\nexport const Input = styled('input')`\r\n  box-sizing: border-box;\r\n  font-size: 2rem;\r\n  padding: 1rem;\r\n  display: block;\r\n  margin: 2rem auto;\r\n  width: 30vw;\r\n`;\r\nexport const Label = styled('label')`\r\n  color: white;\r\n  font-size: 3em;\r\n`;\r\nexport const DivTableRow = styled('div')`\r\n  display: table-row;\r\n`;\r\nexport const Container = styled('div')`\r\n  display: flex;\r\n  opacity: 0.9;\r\n  background-color: whitesmoke;\r\n  justify-content: center;\r\n`;\r\nexport const Img = styled('img')`\r\n  height: 16em;\r\n`;\r\nexport const DivTable = styled('div')`\r\n  display: table;\r\n  max-width: 20em;\r\n  float: right;\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\nexport const divTableHeading = styled('div')`\r\n  background-color: #eee;\r\n  display: table-header-group;\r\n`;\r\nexport const divTableHead = styled('div')`\r\n  border: 1px solid #999999;\r\n  display: table-cell;\r\n  padding: 3px 10px;\r\n`;\r\nexport const DivTableCell = styled('div')`\r\n  border: 1px solid #999999;\r\n  display: table-cell;\r\n  padding: 3px 10px;\r\n`;\r\nexport const divTableFoot = styled('div')`\r\n  background-color: #eee;\r\n  display: table-footer-group;\r\n  font-weight: bold;\r\n`;\r\nexport const DivTableBody = styled('div')`\r\n  display: table-row-group;\r\n`;","import { IPokemon } from \"../interfaces/interfaces\";\nimport {Container, Img, DivTable, DivTableBody, DivTableRow, DivTableCell} from \"../TSStyled\";\n\nconst PokeCard = ({sprites, height, weight, game_indices, types}: IPokemon) => {\n  return (\n      <Container>\n        <Img src={sprites[\"front_default\"]} />\n          <DivTable>\n            <DivTableBody>\n              <DivTableRow>\n                <DivTableCell>Type</DivTableCell>\n                <DivTableCell>{types[0].type.name}</DivTableCell>\n              </DivTableRow>\n              <DivTableRow>\n                <DivTableCell>Height</DivTableCell>\n                <DivTableCell>\n                  {Math.round(height * 3.9)}\"\n              </DivTableCell>\n              </DivTableRow>\n              <DivTableRow>\n                <DivTableCell>Weight</DivTableCell>\n                <DivTableCell>\n                  {Math.round(weight / 4.3)} lbs\n                </DivTableCell>\n              </DivTableRow>\n              <DivTableRow>\n                <DivTableCell>Number of Battles</DivTableCell>\n                <DivTableCell>{game_indices.length}</DivTableCell>\n              </DivTableRow>\n            </DivTableBody>\n          </DivTable>\n      </Container>\n  );\n};\n\nexport default PokeCard;\n\n/*\n\n*/","import {  useState } from \"react\";\nimport \"./App.css\";\nimport {  fetchPokemon } from \"./api\";\nimport { IPokemon } from \"./interfaces/interfaces\";\nimport PokeCard from \"./components/PokeCard\";\n\nimport {DivApp, Form, Input, Label} from \"./TSStyled\"\n\nfunction App() {\n  const [search, setSearch] = useState<string>();\n  const [pokemon, setPokemon] = useState<IPokemon | null>(null);\n\n  async function handleEnter(e: React.KeyboardEvent<HTMLInputElement>) {\n    if(e.key === \"Enter\") {\n      e.preventDefault();\n      const data = await fetchPokemon(search!);\n      console.log(data)\n      setPokemon(data);\n    }\n  }\n  return (\n    <DivApp>\n      <div>\n        <Form>\n          <Label>Enter a pokemon's name</Label>\n          <Input type=\"text\" onChange={e => setSearch(e.target.value)} onKeyPress={(e) => handleEnter(e)} />\n        </Form>\n        {pokemon && <PokeCard {...pokemon!} />}\n      </div>\n    </DivApp>\n  );\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}